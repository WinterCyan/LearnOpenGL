#version 330 core
layout (location=0) in vec3 aPos;
layout (location=1) in vec3 aNorm;

out vec3 ReflectVec;

uniform vec3 cameraPos;
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main(){
    vec3 position = vec3(model * vec4(aPos, 1.0));
    vec3 viewVec = normalize(position - cameraPos);
    vec3 normal = mat3(transpose(inverse(model))) * aNorm;
    ReflectVec = refract(viewVec, normalize(normal), 1.0/1.52);
    gl_Position = projection*view*model*vec4(aPos, 1.0);
}
