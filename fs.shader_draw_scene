#version 330 core

in VS_OUT {
    vec2 TexCoords;
    vec3 Norm;
    vec3 FragPos;
} fs_in;

out vec4 FragColor;
uniform sampler2D cubeTexture;
uniform vec3 lightPos;
uniform vec3 viewPos;

void main() {
    vec3 texColor = texture(cubeTexture, fs_in.TexCoords).rgb;
    vec3 norm = normalize(fs_in.Norm);
    vec3 lightRay = normalize(lightPos - fs_in.FragPos); // from fragment to lightPos;
    vec3 viewRay = normalize(viewPos - fs_in.FragPos); // from fragment to viewer
    vec3 halfway = normalize(viewRay + lightRay);
    // ambient
    vec3 ambient_color = .1 * texColor;
    // diffuse
    float diffuse = max(dot(norm, lightRay), .0);
    vec3 diffuse_color = diffuse * texColor;
    // specular
    float specular = pow(dot(halfway, norm), 64.);
    vec3 specular_color = specular * texColor;
    // total
    vec3 final_color = ambient_color + diffuse_color + specular_color;
    FragColor = vec4(final_color, 1.0);
}
