#version 330 core
out vec4 FragColor;
uniform sampler2D wallTexture;
uniform sampler2D normalTexture;
in VS_OUT {
    vec2 TexCoords;
    vec3 FragPosInTBN;
    vec3 viewPosInTBN;
    vec3 lightPosInTBN;
} fs_in;
void main() {
    vec3 Norm = texture(normalTexture, fs_in.TexCoords).rgb;
    Norm = normalize(Norm * 2.0 - 1.0);
    vec3 texColor = texture(wallTexture, fs_in.TexCoords).rgb;
    vec3 lightRay = normalize(fs_in.lightPosInTBN - fs_in.FragPosInTBN); // from fragment to lightPos;
    vec3 viewRay = normalize(fs_in.viewPosInTBN - fs_in.FragPosInTBN); // from fragment to viewer
    vec3 halfway = normalize(viewRay + lightRay);
    // ambient
    vec3 ambient_color = .3 * texColor;
    // diffuse
    float diffuse = max(dot(Norm, lightRay), .0);
    vec3 diffuse_color = diffuse * texColor;
    // specular
    float specular = pow(max(dot(halfway, Norm), 0.), 32.);
    vec3 specular_color = 2 * specular * texColor;
    // total
    vec3 final_color = ambient_color + diffuse_color + specular_color;
    FragColor = vec4(final_color, 1.0);
}
